{"version":3,"file":"component---src-pages-index-tsx-811a89dac30bd4e1246a.js","mappings":"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","sources":["webpack://hikun-blog/./src/components/MainProfile.tsx","webpack://hikun-blog/./src/components/Posts/index.tsx","webpack://hikun-blog/./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport Typography from './Typography';\nimport mixins from 'assets/styles/mixins';\nimport {\n  AiFillGithub as GithubIcon,\n  AiFillLinkedin as LinkedinIcon,\n  AiOutlineInstagram as InstagramIcon,\n} from 'react-icons/ai';\nimport Button from './Button';\n\nconst Profile = styled('div')(({ theme }) => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  borderRadius: 6,\n  backgroundColor: 'var(--content-background-color)',\n  boxShadow: `10px 20px 20px 0 ${theme.isDark ? 'rgba(255,255,255, .08)' : 'rgba(92, 95, 112, .08)'}`,\n  padding: '20px',\n  position: 'relative',\n  overflow: 'hidden',\n  transform: 'translate3d(0,0,0)',\n  transition: 'all .15s',\n  '&::after': {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    display: 'block',\n    backdropFilter: 'brightness(1.0)',\n    transition: 'all .15s',\n  },\n  [mixins.breakpoints.md]: {\n    flexDirection: 'row',\n  },\n}));\n\nconst ImageWrap = styled('div')(() => ({\n  width: 'calc(100% - 40px)',\n  minWidth: '76px',\n  margin: '0 auto',\n  borderRadius: '50%',\n  overflow: 'hidden',\n  [mixins.breakpoints.md]: {\n    flexBasis: '100px',\n  },\n}));\n\nconst TextWrap = styled('div')(() => ({\n  margin: '20px 0 0 0',\n  color: 'var(--text-color)',\n  textAlign: 'center',\n  [mixins.breakpoints.md]: {\n    margin: 0,\n    padding: '0 0 0 20px',\n    flexBasis: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    textAlign: 'left',\n    h3: {\n      flexBasis: '100%',\n    },\n    h4: {\n      '&::after': {\n        display: 'inline-block',\n        content: '\"/\"',\n        fontSize: '12px',\n        padding: '0 5px',\n      },\n    },\n  },\n  [mixins.breakpoints.sm]: {\n    'h4::after': {\n      content: '\"\"',\n    },\n  },\n}));\n\nconst IconWrap = styled('div')(() => ({\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  padding: '20px 0 0 0',\n  margin: '20px 0 0 0',\n  borderTop: '1px solid var(--hr-color)',\n\n  '> a': {\n    transition: 'all .1s',\n    display: 'block',\n    transform: 'translate3d(0,0,0)',\n    color: 'var(--text-color)',\n    '&:hover': {\n      color: 'var(--text-hover-color)',\n      transform: 'translate3d(0, -2px, 0);',\n    },\n  },\n  [mixins.breakpoints.md]: {\n    borderTop: 0,\n    margin: 0,\n    padding: 0,\n    flexBasis: 40,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n\n    '> a': {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'center',\n    },\n  },\n}));\n\nconst MainProfile: React.FC = () => {\n  return (\n    <Profile>\n      <ImageWrap>\n        <StaticImage src=\"https://avatars.githubusercontent.com/u/76590935\" layout=\"constrained\" alt=\"Heehyeon Lee\" />\n      </ImageWrap>\n      <TextWrap>\n        <Typography as=\"h3\" className=\"m-0\" variant=\"headline-h5\" id=\"name\">\n          이희현\n        </Typography>\n        <Typography as=\"h4\" className=\"m-0\" variant=\"interface-body1\">\n          Software engineer\n        </Typography>\n        <Typography as=\"span\" variant=\"interface-body2\">\n          Seoul, Korea\n        </Typography>\n      </TextWrap>\n      <IconWrap>\n        <Button variant=\"link\" title=\"github\" target=\"_blank\" href=\"https://github.com/dev-hikun\">\n          <GithubIcon size={20} />\n        </Button>\n        <Button\n          variant=\"link\"\n          title=\"linkedin\"\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/%ED%9D%AC%ED%98%84-%EC%9D%B4-a40a80128/\"\n        >\n          <LinkedinIcon size={20} />\n        </Button>\n        <Button variant=\"link\" title=\"instagram\" target=\"_blank\" href=\"https://www.instagram.com/_def.unction/\">\n          <InstagramIcon size={20} />\n        </Button>\n      </IconWrap>\n    </Profile>\n  );\n};\nexport default MainProfile;\n","import React from 'react';\nimport Typography from 'components/Typography';\nimport styled from '@emotion/styled';\nimport mixins from 'assets/styles/mixins';\nimport { ColorDic } from 'assets/styles/theme/colors';\nimport { keyframes } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { AllMarkdownResult } from 'interfaces';\nimport { IndexQueryData } from 'pages';\nimport { getImage, IGatsbyImageData, GatsbyImage } from 'gatsby-plugin-image';\n\nexport interface PostListProps extends AllMarkdownResult<IndexQueryData> {\n  title?: string;\n}\n\nexport interface IPostItem {\n  title: string;\n  slug: string;\n  tags: string[];\n  content: string;\n  date: string;\n  image?: IGatsbyImageData;\n}\n\nconst PostWrap = styled('section')(() => ({\n  flexBasis: '100%',\n  flexShrink: 1,\n  flexGrow: 2,\n  [mixins.breakpoints.md]: {\n    minWidth: '100%',\n    flexGrow: 0,\n  },\n}));\n\nconst PostList = styled('ul')(() => ({\n  display: 'flex',\n  flexWrap: 'wrap',\n  columnGap: 15,\n  rowGap: 15,\n  [mixins.breakpoints.md]: {\n    rowGap: 20,\n  },\n}));\n\nconst PostItem = styled('li')(({ theme }) => ({\n  borderRadius: theme.size.sectionBorderRadius,\n  backgroundColor: 'var(--content-background-color)',\n  overflow: 'hidden',\n  listStyle: 'none',\n  transition: 'all .15s',\n  display: 'flex',\n  flexDirection: 'column',\n  boxShadow: `10px 20px 20px 0 ${theme.isDark ? 'rgba(255,255,255, .08)' : 'rgba(92, 95, 112, .08)'}`,\n  '&:hover': {\n    boxShadow: `10px 20px 30px 0 ${theme.isDark ? 'rgba(255,255,255, .16)' : 'rgba(92, 95, 112, .16)'}`,\n    transform: 'translate3d(0,-4px,0)',\n\n    img: {\n      animation: `${keyframes`\n      from { transform: scale(1) }\n      to { transform: scale(1.1) }\n    `} 1s ease-in forwards`,\n    },\n  },\n\n  maxWidth: `calc(33.3% - 10px)`,\n  flexBasis: '33.3%',\n  [mixins.breakpoints.xl]: {\n    flexBasis: '50%',\n    maxWidth: `calc(50% - 7.5px)`,\n  },\n  [mixins.breakpoints.md]: {\n    flexBasis: '100%',\n    maxWidth: '100%',\n  },\n  [mixins.breakpoints.sm]: {\n    border: 0,\n    borderRadius: 0,\n  },\n}));\n\nconst PostItemHeader = styled('div')(() => ({\n  borderBottom: '1px solid var(--hr-color)',\n  display: 'flex',\n  flexDirection: 'column',\n  flex: '0 1 100%',\n}));\n\nconst PostItemImageWrapper = styled(Link)(() => ({\n  height: 160,\n  flexBasis: '160px',\n  minHeight: 160,\n  backgroundColor: 'var(--hr-color)',\n  overflow: 'hidden',\n  display: 'block',\n  [mixins.breakpoints.sm]: {\n    height: 'auto',\n  },\n}));\n\nconst PostItemDescription = styled(Link)(() => ({\n  padding: '24px 24px 0 24px',\n  display: 'block',\n  flex: '0 1 100%',\n  '.post-title': {\n    margin: 0,\n    color: 'var(--text-color)',\n  },\n  '.post-description': {\n    marginTop: 8,\n  },\n}));\n\nconst PostItemTags = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '0 1 70px',\n  padding: 24,\n  minHeight: 70,\n  margin: '0px -3px',\n  overflowX: 'scroll',\n  msOverflowStyle: 'none',\n  scrollbarWidth: 'none',\n  '::-webkit-scrollbar': {\n    width: 0,\n    height: 0,\n  },\n  span: {\n    display: 'block',\n    padding: '2px 6px',\n    whiteSpace: 'nowrap',\n    margin: '0px 3px',\n    borderRadius: '8px',\n    backgroundColor: theme.isDark ? ColorDic['gray-500'] : ColorDic['gray-200'],\n    color: theme.isDark ? ColorDic['gray-200'] : ColorDic['gray-500'],\n  },\n}));\n\nconst PostItemFooter = styled('div')(() => ({\n  display: 'flex',\n  padding: '10px 24px',\n}));\n\nconst Posts: React.FC<PostListProps> = props => {\n  const { title, data } = props;\n\n  const posts: Array<IPostItem> = data.allMarkdownRemark.edges.map(edge => {\n    const { excerpt, frontmatter } = edge.node;\n    const { date, slug, tags, title, featuredImage } = frontmatter;\n    return {\n      title,\n      tags,\n      slug,\n      date,\n      content: excerpt,\n      ...(featuredImage ? { image: getImage(featuredImage) } : {}),\n    };\n  });\n  return (\n    <PostWrap>\n      {title ? <Typography variant=\"headline-h5\">{title}</Typography> : null}\n      <PostList>\n        {posts.map(item => {\n          return (\n            <PostItem key={item.title} className={!item.image ? 'no-image' : ''}>\n              <PostItemHeader>\n                {item.image && (\n                  <PostItemImageWrapper to={item.slug}>\n                    <GatsbyImage image={item.image} alt={item.title} />\n                  </PostItemImageWrapper>\n                )}\n                <PostItemDescription to={item.slug}>\n                  <Typography\n                    className=\"post-title\"\n                    variant=\"subhead-subhead3\"\n                    as=\"h3\"\n                    ellipsis={2}\n                    css={{ height: '48px' }}\n                  >\n                    {item.title}\n                  </Typography>\n                  <Typography\n                    className=\"post-description\"\n                    variant=\"interface-body2\"\n                    themeColor=\"gray-500\"\n                    as=\"div\"\n                    ellipsis={4}\n                    css={{ height: '88px' }}\n                  >\n                    {item.content}\n                  </Typography>\n                </PostItemDescription>\n                <PostItemTags>\n                  {item.tags.map(tag => (\n                    <Typography variant=\"interface-description\" key={tag}>\n                      {tag}\n                    </Typography>\n                  ))}\n                </PostItemTags>\n              </PostItemHeader>\n              <PostItemFooter>\n                <Typography variant=\"interface-description\" themeColor=\"gray-500\">\n                  {item.date}\n                </Typography>\n              </PostItemFooter>\n            </PostItem>\n          );\n        })}\n      </PostList>\n    </PostWrap>\n  );\n};\nexport default Posts;\n","import React from 'react';\nimport Header from 'components/common/Header';\nimport WithThemes from 'components/common/WithThemes';\nimport styled from '@emotion/styled';\nimport mixins from 'assets/styles/mixins';\nimport MainProfile from 'components/MainProfile';\nimport { graphql } from 'gatsby';\nimport Posts from 'components/Posts';\nimport { AllMarkdownResult } from 'interfaces';\nimport { ImageDataLike } from 'gatsby-plugin-image';\n\nconst Aside = styled('aside')(() => ({\n  flexGrow: 1,\n  flexShrink: 0,\n  flexBasis: '250px',\n  [mixins.breakpoints.md]: {\n    flexGrow: 0,\n    flexBasis: '100%',\n    paddingBottom: '20px',\n  },\n  [mixins.breakpoints.sm]: {\n    padding: '0 20px 20px',\n  },\n}));\n\nconst AsideSection: React.FC = () => {\n  return (\n    <Aside>\n      <MainProfile />\n    </Aside>\n  );\n};\n\nconst MainLayout = styled('div')(({ theme }) => ({\n  display: 'flex',\n  maxWidth: theme.size.siteWidth,\n  margin: '0 auto',\n  columnGap: '15px',\n  padding: '20px 20px',\n  [mixins.breakpoints.md]: {\n    flexWrap: 'wrap',\n    padding: '20px 20px',\n  },\n  [mixins.breakpoints.sm]: {\n    padding: '20px 0',\n  },\n}));\n\nexport type IndexQueryData = {\n  edges: Array<{\n    node: {\n      excerpt: string;\n      frontmatter: {\n        date: string;\n        title: string;\n        tags: string[];\n        slug: string;\n        featuredImage?: ImageDataLike;\n      };\n    };\n  }>;\n};\n\nconst indexPage: React.FC<AllMarkdownResult<IndexQueryData>> = WithThemes(({ data }) => {\n  return (\n    <>\n      <Header />\n      <MainLayout>\n        <AsideSection />\n        <Posts data={data} />\n      </MainLayout>\n    </>\n  );\n});\n\nexport const query = graphql`\n  query LatestPostListQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\n      edges {\n        node {\n          excerpt(truncate: true, pruneLength: 200)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            slug\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default indexPage;\n"],"names":["Profile","width","display","flexDirection","borderRadius","backgroundColor","boxShadow","theme","isDark","padding","position","overflow","transform","transition","height","top","left","backdropFilter","mixins","ImageWrap","minWidth","margin","flexBasis","TextWrap","color","textAlign","alignItems","flexWrap","h3","h4","content","fontSize","IconWrap","justifyContent","borderTop","___EmotionJSX","StaticImage","src","layout","alt","Typography","as","className","variant","id","Button","title","target","href","GithubIcon","size","LinkedinIcon","InstagramIcon","PostWrap","flexShrink","flexGrow","PostList","columnGap","rowGap","PostItem","sectionBorderRadius","listStyle","img","animation","keyframes","maxWidth","border","PostItemHeader","borderBottom","flex","PostItemImageWrapper","Link","minHeight","PostItemDescription","marginTop","PostItemTags","overflowX","msOverflowStyle","scrollbarWidth","span","whiteSpace","ColorDic","PostItemFooter","props","posts","data","allMarkdownRemark","edges","map","edge","node","excerpt","frontmatter","date","slug","tags","featuredImage","image","getImage","item","key","to","GatsbyImage","ellipsis","css","themeColor","tag","Aside","paddingBottom","AsideSection","MainProfile","MainLayout","siteWidth","WithThemes","Header","Posts"],"sourceRoot":""}