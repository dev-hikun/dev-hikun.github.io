{"version":3,"file":"commons-e327344dd6b2c7412395.js","mappings":"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","sources":["webpack://hikun-blog/./src/assets/styles/theme/colors.ts","webpack://hikun-blog/./src/assets/styles/theme/index.ts","webpack://hikun-blog/./src/assets/styles/globals/index.ts","webpack://hikun-blog/./src/components/common/WithThemes.tsx","webpack://hikun-blog/./src/hooks/useBlogSettings.ts"],"sourcesContent":["import React from 'react';\n\nexport type ColorVariantKey = '050' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type AlphaVaraintKey = '10' | '20' | '30' | '40' | '50' | '60' | '70' | '80' | '90' | '100';\nexport type ThemeColorKey = 'gray' | 'blue' | 'red' | 'green' | 'yellow' | 'purple';\nexport type GrayscaleKey = 'white' | 'black';\nexport type ThemeColorVariant = `${ThemeColorKey}-${ColorVariantKey}`;\nexport type GrayscaleVaraint = `${GrayscaleKey}-${AlphaVaraintKey}`;\nconst grayscale: Record<GrayscaleKey, Record<AlphaVaraintKey, React.CSSProperties['color']>> = {\n  white: {\n    10: 'rgba(255, 255, 255, 0.1)',\n    20: 'rgba(255, 255, 255, 0.2)',\n    30: 'rgba(255, 255, 255, 0.3)',\n    40: 'rgba(255, 255, 255, 0.4)',\n    50: 'rgba(255, 255, 255, 0.5)',\n    60: 'rgba(255, 255, 255, 0.6)',\n    70: 'rgba(255, 255, 255, 0.7)',\n    80: 'rgba(255, 255, 255, 0.8)',\n    90: 'rgba(255, 255, 255, 0.9)',\n    100: '#fff',\n  },\n  black: {\n    10: 'rgba(0, 0, 0, 0.1)',\n    20: 'rgba(0, 0, 0, 0.2)',\n    30: 'rgba(0, 0, 0, 0.3)',\n    40: 'rgba(0, 0, 0, 0.4)',\n    50: 'rgba(0, 0, 0, 0.5)',\n    60: 'rgba(0, 0, 0, 0.6)',\n    70: 'rgba(0, 0, 0, 0.7)',\n    80: 'rgba(0, 0, 0, 0.8)',\n    90: 'rgba(0, 0, 0, 0.9)',\n    100: '#000',\n  },\n};\n\nconst colors: Record<ThemeColorKey, Record<ColorVariantKey, React.CSSProperties['color']>> = {\n  gray: {\n    '050': '#FDFDFD',\n    '100': '#F2F2F2',\n    '200': '#E4E4E4',\n    '300': '#ccc',\n    '400': '#a5a5a5',\n    '500': '#888',\n    '600': '#747474',\n    '700': '#616161',\n    '800': '#4a4a4a',\n    '900': '#202020',\n  },\n  blue: {\n    '050': '#e5f6ff',\n    '100': '#b8e4ff',\n    '200': '#8ad3ff',\n    '300': '#5cc2ff',\n    '400': '#2eb1ff',\n    '500': '#00A0FF',\n    '600': '#0084d2',\n    '700': '#0067A4',\n    '800': '#004a76',\n    '900': '#002d48',\n  },\n  red: {\n    '050': '#f9fbff',\n    '100': '#f4cbca',\n    '200': '#efaba9',\n    '300': '#ea8b88',\n    '400': '#e56b67',\n    '500': '#e94b46',\n    '600': '#b63c38',\n    '700': '#8e2e2b',\n    '800': '#77201e',\n    '900': '#3e1211',\n  },\n  green: {\n    '050': '#f1f9ec',\n    '100': '#daedca',\n    '200': '#c2e2a8',\n    '300': '#aad786',\n    '400': '#92cc64',\n    '500': '#7AC142',\n    '600': '#649f36',\n    '700': '#4e7c2a',\n    '800': '#38591e',\n    '900': '#f1f9ec',\n  },\n  yellow: {\n    '050': '#fffef0',\n    '100': '#fff4c0',\n    '200': '#ffea90',\n    '300': '#ffe060',\n    '400': '#ffd730',\n    '500': '#ffce00',\n    '600': '#d2a800',\n    '700': '#a48300',\n    '800': '#765e00',\n    '900': '#483900',\n  },\n  purple: {\n    '050': '#f3ecf9',\n    '100': '#decaed',\n    '200': '#c9a8e2',\n    '300': '#b486d7',\n    '400': '#9F64CC',\n    '500': '#8a42c1',\n    '600': '#72369f',\n    '700': '#592a7c',\n    '800': '#401e59',\n    '900': '#271236',\n  },\n};\n\nexport type ThemeSemanticColorKey = 'success' | 'info' | 'warning' | 'danger' | 'white';\nconst semanticColor: Record<ThemeSemanticColorKey, React.CSSProperties['color']> = {\n  success: colors.green[500],\n  info: colors.blue[500],\n  warning: colors.yellow[500],\n  danger: colors.red[500],\n  white: '#fff',\n} as const;\n\nconst colorKeys = Object.keys(colors) as ThemeColorKey[];\nconst getColorVariantKeys = (key: ThemeColorKey) => Object.keys(colors[key]) as ColorVariantKey[];\nconst getGrayscaleVaraintKeys = (key: GrayscaleKey) => Object.keys(grayscale[key]) as AlphaVaraintKey[];\nconst kebabColors = colorKeys.reduce(\n  (arr: ThemeColorVariant[], key) => [\n    ...arr,\n    ...getColorVariantKeys(key).map<ThemeColorVariant>(vKey => `${key}-${vKey}`),\n  ],\n  [],\n);\n\nconst themeColorDic = kebabColors.reduce((obj, kebabKey) => {\n  const [key, variant] = kebabKey.split('-') as [ThemeColorKey, ColorVariantKey];\n  return { ...obj, [kebabKey]: colors[key][variant] };\n}, {}) as Record<ThemeColorVariant, string>;\n\nconst kebabGrayScales = (Object.keys(grayscale) as Array<GrayscaleKey>).reduce(\n  (arr: GrayscaleVaraint[], key) => [\n    ...arr,\n    ...getGrayscaleVaraintKeys(key).map<GrayscaleVaraint>(vKey => `${key}-${vKey}`),\n  ],\n  [],\n);\n\nconst grayscaleDic = kebabGrayScales.reduce((obj, kebabKey) => {\n  const [key, variant] = kebabKey.split('-') as [GrayscaleKey, AlphaVaraintKey];\n  return { ...obj, [kebabKey]: grayscale[key][variant] };\n}, {}) as Record<GrayscaleVaraint, string>;\n\nexport const ColorDic = { ...themeColorDic, ...semanticColor, ...grayscaleDic };\nexport const ColorDicKeys = Object.keys(ColorDic) as (keyof typeof ColorDic)[];\n\nexport default Object.assign(colors, semanticColor, grayscale);\n","import React from 'react';\nimport colors, { ColorDic } from './colors';\n\ntype AdditinalColorKey = 'background' | 'text' | 'link' | 'hr' | 'navBackground';\nexport interface Theme {\n  color: Record<AdditinalColorKey, React.CSSProperties['color']> & typeof colors;\n  size: {\n    siteWidth: number;\n  };\n  isDark?: boolean;\n}\n\ninterface ThemeGroup {\n  light: Theme;\n  dark: Theme;\n}\n\n/**\n * @light-theme\n */\nexport const light: Theme = {\n  color: {\n    background: ColorDic['gray-050'],\n    text: ColorDic['gray-900'],\n    link: ColorDic['blue-500'],\n    hr: ColorDic['gray-200'],\n    navBackground: ColorDic['white-90'],\n    ...colors,\n  },\n  size: {\n    siteWidth: 1200,\n  },\n} as const;\n\n/**\n * @dark-theme\n */\nexport const dark: Theme = {\n  color: {\n    ...light.color,\n    text: ColorDic['gray-050'],\n    background: colors.gray[900],\n    navBackground: ColorDic['black-90'],\n    hr: ColorDic['gray-700'],\n  },\n  size: {\n    ...light.size,\n  },\n  isDark: true,\n};\n\nconst mode: ThemeGroup = {\n  light,\n  dark,\n};\n\nexport default mode;\n","import { css } from '@emotion/react';\nimport theme, { Theme } from 'assets/styles/theme';\nimport { ColorDic, ColorDicKeys } from '../theme/colors';\nconst dark = theme['dark'];\nconst light = theme['light'];\n\nconst colorByTheme = (theme: Theme) => `\n  --background-color: ${theme.color.background || ''};\n  --nav-background-color: ${theme.color.navBackground || ''};\n  --text-color: ${theme.color.text || ''};\n  --hr-color: ${theme.color.hr || ''};\n  .text-text: { color: ${theme.color.text || ''} };\n`;\n\nconst GlobalStyle = css([\n  `\n      :root {\n        ${colorByTheme(light)}\n        ${ColorDicKeys.map(key => `--${key}: ${ColorDic[key] || ''}`).join(';')}\n      }\n      [data-theme=\"dark\"] {\n        ${colorByTheme(dark)}\n      }\n    `,\n  `\n      * {\n        box-sizing: border-box;\n      }\n      html, body, button, ul {\n        margin: 0;\n        padding: 0;\n        font-family: 'Noto Sans KR',-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n        font-size: 16px;\n      }\n      body {\n        background-color: var(--background-color);\n        color: var(--text-color);\n      }\n      a:link {\n        text-decoration: none;\n      }\n    `,\n  {\n    '.ripple': {\n      position: 'absolute',\n      borderRadius: '50%',\n      backgroundColor: `#0000004C`,\n      width: 100,\n      height: 100,\n      marginTop: -50,\n      marginLeft: -50,\n      animation: 'ripple 1s',\n      opacity: 1,\n      zIndex: 99999,\n    },\n  },\n  Array.from({ length: 100 }, (_, i) => i).reduce(\n    (classes: { [x: string]: any }, i) => ({\n      ...classes,\n      [`.px-${i}`]: {\n        paddingLeft: `${4 * i}px`,\n        paddingRight: `${4 * i}px`,\n      },\n      [`.py-${i}`]: {\n        paddingTop: `${4 * i}px`,\n        paddingBottom: `${4 * i}px`,\n        [`&.button--outlined`]: {\n          paddingTop: `${4 * i - 1}px`,\n          paddingBottom: `${4 * i - 1}px`,\n        },\n      },\n      [`.px-${i}px`]: {\n        paddingLeft: `${i}px`,\n        paddingRight: `${i}px`,\n      },\n      [`.py-${i}px`]: {\n        paddingTop: `${i}px`,\n        paddingBottom: `${i}px`,\n      },\n      [`.p-${i}`]: {\n        padding: `${4 * i}px`,\n      },\n      [`.p-${i}px`]: {\n        padding: `${i}px`,\n      },\n      [`.border-${i}`]: {\n        borderWidth: `${i}px`,\n      },\n    }),\n    {},\n  ),\n  ColorDicKeys.reduce(\n    (colorClasses, key) => ({\n      ...colorClasses,\n      ...['', 'hover', 'active'].reduce((classes, selector) => {\n        return {\n          ...classes,\n          [`.${selector ? `${selector}\\\\:` : ''}bg-${key}${selector ? `:${selector}` : ''}`]: {\n            backgroundColor: ColorDic[key],\n          },\n        };\n      }, {}),\n      [`.text-${key}, .text-${key}:visited, .text-${key}:link, .hover\\\\:text-${key}:hover .active\\\\:text-${key}:active`]:\n        {\n          color: ColorDic[key],\n        },\n      ...['', 'hover', 'active'].reduce((classes, selector) => {\n        return {\n          ...classes,\n          [`.${selector ? `${selector}\\\\:` : ''}border-${key}${selector ? `:${selector}` : ''}`]: {\n            borderColor: ColorDic[key],\n          },\n        };\n      }, {}),\n    }),\n    {},\n  ),\n  {\n    '.bg-transparent': { background: 'transparent' },\n    '.border-solid': { borderStyle: 'solid' },\n  },\n  `\n@keyframes ripple {\n  from {\n    opacity: 1;\n    transform: scale(0);\n  }\n  to {\n    opacity: 0;\n    transform: scale(10);\n  }\n}\n@keyframes banner {\n  from {\n    transform: scale(0.8);\n  }\n  to {\n    transform: scale(1);\n  }\n}\n@keyframes bannerBackdrop {\n  from {\n    backdropFilter: 'blur(0px)',\n  },\n  to {\n    backdropFilter: 'blue(5px)',\n  },\n},\n    `,\n]);\nexport default GlobalStyle;\n","import { Global, ThemeProvider } from '@emotion/react';\nimport React from 'react';\nimport THEME from 'assets/styles/theme';\nimport GlobalStyle from 'assets/styles/globals';\nimport useTheme, { BlogSettingsContext } from 'hooks/useBlogSettings';\nimport 'assets/styles/globals/index.css';\n\nfunction WithThemes<T>(Component: React.FC<T>) {\n  return (props: React.ComponentProps<React.FC<T>>) => {\n    const [isDarkMode, setDarkMode] = useTheme();\n    return (\n      <BlogSettingsContext.Provider value={{ isDarkMode, setDarkMode }}>\n        <ThemeProvider theme={THEME[isDarkMode ? 'dark' : 'light']}>\n          <Global styles={GlobalStyle} />\n          <Component {...props} />\n        </ThemeProvider>\n      </BlogSettingsContext.Provider>\n    );\n  };\n}\nexport default WithThemes;\n","import React, { useState, useMemo, useEffect } from 'react';\n\nconst SETTING_KEY = 'dev-hikun-blog';\ntype BlogSettings = { systemDarkMode?: boolean; manualDarkMode?: boolean };\nconst useBlogSettings = (): [typeof isDarkMode, typeof setDarkMode] => {\n  const [settings, setSettings] = useState<BlogSettings>(() => {\n    if (typeof window === 'undefined') {\n      return {\n        manualDarkMode: undefined,\n        systemDarkMode: false,\n      };\n    }\n\n    // 시스템 다크모드가 활성화 되어 있는지\n    const { matches: systemDarkMode } = window.matchMedia('(prefers-color-scheme: dark)');\n    // 로컬 스토리지에 저장된 값이 있다면 불러오고, 없다면 초기값을 설정\n    const savedSettings = JSON.parse(window.localStorage.getItem(SETTING_KEY) || '{}') as BlogSettings;\n    // 빈 객체면 manualDarkMode 초기화\n    // 시스템 다크모드는 항상 최신으로 갱신\n    if (typeof savedSettings.manualDarkMode !== 'boolean') {\n      return {\n        manualDarkMode: undefined,\n        systemDarkMode,\n      };\n    }\n\n    return {\n      ...savedSettings,\n      systemDarkMode,\n    };\n  });\n\n  const isDarkMode = useMemo(() => {\n    if (typeof settings.manualDarkMode === 'boolean') return settings.manualDarkMode;\n    return settings.systemDarkMode;\n  }, [settings]);\n\n  const setDarkMode = (isDarkMode: boolean) => {\n    const { systemDarkMode } = settings;\n    setSettings({\n      manualDarkMode: isDarkMode,\n      systemDarkMode,\n    });\n    if (!window) return;\n    window.localStorage.setItem(\n      SETTING_KEY,\n      JSON.stringify({\n        manualDarkMode: isDarkMode,\n        systemDarkMode,\n      }),\n    );\n  };\n\n  useEffect(() => {\n    if (!document) return;\n    const wrapper = document.querySelector('body');\n    if (isDarkMode) wrapper?.setAttribute('data-theme', 'dark');\n    else wrapper?.removeAttribute('data-theme');\n  }, [isDarkMode]);\n\n  return [isDarkMode, setDarkMode];\n};\n\nexport const BlogSettingsContext = React.createContext<{\n  isDarkMode?: boolean;\n  setDarkMode?: (isDarkMode: boolean) => void;\n}>({\n  isDarkMode: undefined,\n  setDarkMode: undefined,\n});\n\nexport default useBlogSettings;\n"],"names":["grayscale","white","black","colors","gray","blue","red","green","yellow","purple","semanticColor","success","info","warning","danger","colorKeys","Object","keys","themeColorDic","reduce","arr","key","getColorVariantKeys","map","vKey","obj","kebabKey","split","variant","grayscaleDic","getGrayscaleVaraintKeys","ColorDic","ColorDicKeys","assign","light","color","background","text","link","hr","navBackground","size","siteWidth","mode","dark","isDark","theme","colorByTheme","css","join","position","borderRadius","backgroundColor","width","height","marginTop","marginLeft","animation","opacity","zIndex","Array","from","length","_","i","classes","paddingLeft","paddingRight","paddingTop","paddingBottom","padding","borderWidth","colorClasses","selector","borderColor","borderStyle","Component","props","useTheme","isDarkMode","setDarkMode","___EmotionJSX","BlogSettingsContext","value","ThemeProvider","THEME","Global","styles","GlobalStyle","SETTING_KEY","React","undefined","useState","window","manualDarkMode","systemDarkMode","matchMedia","matches","savedSettings","JSON","parse","localStorage","getItem","settings","setSettings","useMemo","useEffect","document","wrapper","querySelector","setAttribute","removeAttribute","setItem","stringify"],"sourceRoot":""}